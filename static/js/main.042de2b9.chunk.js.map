{"version":3,"sources":["components/Header/index.js","components/CurrentDate/index.js","components/DynamicChart/index.js","components/FrontPageData/index.js","components/StateDisplay/index.js","components/StatePage/index.js","components/VaccinationPage/index.js","components/AboutPage/index.js","App.js","actions/types.js","reducers/index.js","reducers/dataReducer.js","actions/index.js","index.js"],"names":["Header","Navbar","Brand","Toggle","Collapse","className","Text","href","icon","faGithubSquare","size","CurrentDate","monthName","todayDate","Date","getDate","todayMonth","getMonth","todayYear","getFullYear","DynamicChart","props","console","log","defaults","font","family","useState","chartData","setChartData","covidData","useSelector","state","data","deathsObj","timeline","deaths","deathArray","Object","values","deathDates","keys","dailyDeathArray","i","dailyDeathCount","push","useEffect","labels","datasets","label","borderColor","backgroundColor","borderWidth","options","responsive","title","text","display","scales","y","grace","beginAtZero","FrontPageData","deathData","toString","replace","todayDeaths","active","StateDisplay","stateName","deathsToday","totalCases","StatePage","stateData","selectedState","setSelectedState","selectedStateData","setSelectedStateData","stateList","forEach","sort","search","length","Dropdown","variant","id","Menu","map","Item","onClick","cases","VaccinationPage","vaccineData","totalAdministered","total","dateArray","vaccineArray","date","daily","AboutPage","App","Tabs","defaultActiveKey","Tab","eventKey","ADD_FETCHED_DATA","ADD_HISTORICAL_DATA","ADD_STATE_DATA","ADD_VACCINE_DATA","combineReducers","action","type","payload","fetchData","dispatch","a","axios","get","then","response","catch","error","fetchDataTwo","fetchDataThree","fetchDataFour","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","getData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.042de2b9.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons';\nimport './style.css';\n\nconst Header = () => {\n  return (\n    <Navbar>\n      <Navbar.Brand>COVID-19 Statistics</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className='justify-content-end'>\n        <Navbar.Text>\n          <a href='https://github.com/ethanrmcdowell/covid-watcher'>\n            <FontAwesomeIcon icon={faGithubSquare} size='2x' />\n          </a>\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n\n// <Link to='/'>Home</Link>\n// <Link to='/search'>Search</Link>\n// <Link to='/about'>About</Link>\n","import React from 'react';\nimport './style.css';\n\nconst CurrentDate = () => {\n  let todayDate = new Date().getDate();\n  let todayMonth = new Date().getMonth();\n  let todayYear = new Date().getFullYear();\n  let monthName;\n\n  switch (todayMonth) {\n    case 0:\n      monthName = 'January';\n      break;\n    case 1:\n      monthName = 'February';\n      break;\n    case 2:\n      monthName = 'March';\n      break;\n    case 3:\n      monthName = 'April';\n      break;\n    case 4:\n      monthName = 'May';\n      break;\n    case 5:\n      monthName = 'June';\n      break;\n    case 6:\n      monthName = 'July';\n      break;\n    case 7:\n      monthName = 'July';\n      break;\n    case 8:\n      monthName = 'July';\n      break;\n    case 9:\n      monthName = 'July';\n      break;\n    case 10:\n      monthName = 'July';\n      break;\n    default:\n      monthName = 'July';\n      break;\n  }\n  return (\n    <div className='dateContainer'>\n      <h1 className='dateTitle'>\n        {monthName} {todayDate}, {todayYear}\n      </h1>\n    </div>\n  );\n};\n\nexport default CurrentDate;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport { defaults } from 'react-chartjs-2';\nimport './style.css';\n\nconst DynamicChart = props => {\n  console.log(defaults.font.family);\n  defaults.font.family = 'Times New Roman';\n  const [chartData, setChartData] = useState({});\n  // const covidData = props.deathData;\n  const covidData = useSelector(state => state.data[1]);\n  console.log(covidData);\n\n  const deathsObj = covidData.timeline.deaths;\n  const deathArray = Object.values(deathsObj);\n  const deathDates = Object.keys(deathsObj);\n  const dailyDeathArray = [];\n  for (let i = 1; i < 16; i++) {\n    let dailyDeathCount = deathArray[i] - deathArray[i - 1];\n    dailyDeathArray.push(dailyDeathCount);\n  }\n\n  const Chart = () => {\n    setChartData({\n      labels: deathDates,\n      datasets: [\n        {\n          label: 'Deaths',\n          data: dailyDeathArray,\n          borderColor: 'red',\n          backgroundColor: 'red',\n          borderWidth: 1.5,\n        },\n      ],\n    });\n  };\n  useEffect(() => {\n    Chart();\n  }, []);\n  return (\n    <div className='container'>\n      <div className='chartContainer'>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: 'THICCNESS SCALE', display: true },\n            scales: {\n              y: {\n                grace: '0.5%',\n                beginAtZero: false,\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicChart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CurrentDate from '../CurrentDate';\nimport DynamicChart from '../DynamicChart';\nimport './style.css';\n\nconst FrontPageData = props => {\n  const covidData = props.covidData;\n  const deathData = props.deathData;\n\n  if (!covidData || !deathData) {\n    return (\n      <div>\n        <h2>Loading...</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <CurrentDate />\n        <div className='container'>\n          <div className='dataContainer'>\n            <h1 className='countryHeader'>United States:</h1>\n            <h2>\n              Total Deaths:{' '}\n              {covidData.deaths\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n            </h2>\n            <h2>\n              Deaths Today:{' '}\n              {covidData.todayDeaths\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n            </h2>\n            <h2>\n              Total Active Cases:{' '}\n              {covidData.active\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n            </h2>\n          </div>\n          <div className='dataContainer'>\n            <DynamicChart deathData={deathData} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default FrontPageData;\n","import React from 'react';\nimport './style.css';\n\nconst StateDisplay = props => {\n  return (\n    <div className='dataContainer'>\n      <h2 className='stateName'>{props.stateName} </h2>\n\n      <h2>\n        Deaths Today:{' '}\n        {props.deathsToday.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      </h2>\n      <h2>\n        Total Deaths:{' '}\n        {props.deaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      </h2>\n      <h2>\n        Active Cases:{' '}\n        {props.active.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      </h2>\n      <h2>\n        Total Cases:{' '}\n        {props.totalCases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      </h2>\n      <p className='smallMessage'> *updated every 10 minutes</p>\n    </div>\n  );\n};\n\nexport default StateDisplay;\n","import React, { useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport StateDisplay from '../StateDisplay';\nimport './style.css';\n\nconst StatePage = props => {\n  console.log(props);\n  const covidData = props.stateData;\n  const [selectedState, setSelectedState] = useState(false);\n  const [selectedStateData, setSelectedStateData] = useState();\n  let stateList = [];\n  covidData.forEach(stateData => {\n    stateList.push(stateData.state);\n  });\n  stateList = stateList.sort();\n\n  const search = stateName => {\n    for (var i = 0; i < covidData.length; i++) {\n      if (covidData[i].state === stateName) {\n        setSelectedStateData(covidData[i]);\n        console.log(covidData[i]);\n        return covidData[i];\n      }\n    }\n  };\n  if (!covidData) {\n    return <h2>Loading...</h2>;\n  } else if (!selectedState) {\n    return (\n      <div>\n        <div className='dropdownContainer'>\n          <Dropdown>\n            <Dropdown.Toggle variant='secondary' id='dropdown-basic'>\n              Select State / Territory\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {stateList.map(stateName => {\n                return (\n                  <Dropdown.Item\n                    onClick={() => {\n                      setSelectedState(true);\n                      search(stateName);\n                    }}>\n                    {stateName}\n                  </Dropdown.Item>\n                );\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n    );\n  } else if (selectedState) {\n    return (\n      <div>\n        <div className='dropdownContainer'>\n          <Dropdown>\n            <Dropdown.Toggle variant='secondary' id='dropdown-basic'>\n              Select a State\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {stateList.map(stateName => {\n                return (\n                  <Dropdown.Item\n                    onClick={() => {\n                      setSelectedState(true);\n                      search(stateName);\n                    }}>\n                    {stateName}\n                  </Dropdown.Item>\n                );\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <StateDisplay\n          stateName={selectedStateData.state}\n          deathsToday={selectedStateData.todayDeaths}\n          deaths={selectedStateData.deaths}\n          active={selectedStateData.active}\n          totalCases={selectedStateData.cases}\n        />\n      </div>\n    );\n  }\n};\n\nexport default StatePage;\n","import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { defaults } from 'react-chartjs-2';\nimport './style.css';\n\nconst VaccinationPage = props => {\n  console.log(props.vaccineData.timeline);\n  defaults.font.family = 'Times New Roman';\n  const [chartData, setChartData] = useState({});\n  const vaccineData = props.vaccineData.timeline;\n  const totalAdministered = vaccineData[vaccineData.length - 1].total;\n  const dateArray = [];\n  const vaccineArray = [];\n\n  console.log(totalAdministered);\n\n  for (let i = 0; i < props.vaccineData.timeline.length; i++) {\n    dateArray.push(vaccineData[i].date);\n    vaccineArray.push(vaccineData[i].daily);\n  }\n\n  const Chart = () => {\n    setChartData({\n      labels: dateArray,\n      datasets: [\n        {\n          label: 'Vaccines Administered',\n          data: vaccineArray,\n          borderColor: 'green',\n          backgroundColor: 'green',\n          borderWidth: 1.5,\n        },\n      ],\n    });\n  };\n  useEffect(() => {\n    Chart();\n  }, []);\n\n  return (\n    <div className='container'>\n      <div className='titleContainer'>\n        <h2 className='title'>\n          Total vaccines administered in the United States:{' '}\n          {totalAdministered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        </h2>\n      </div>\n      <div className='chartContainer'>\n        <Bar\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: 'THICCNESS SCALE', display: true },\n            scales: {\n              y: {\n                grace: '30%',\n                beginAtZero: false,\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default VaccinationPage;\n","import React from 'react';\nimport './style.css';\n\nconst AboutPage = props => {\n  return (\n    <div className='aboutContainer'>\n      <ul>\n        <li>\n          Data provided by <a href='https://disease.sh/'>disease.sh</a>.\n        </li>\n        <li>\n          Historical data shown on the national line graph is received from a\n          different source, and may show slight variation.\n        </li>\n        <li>Most data is updated every 10 minutes.</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from './components/Header';\nimport FrontPageData from './components/FrontPageData';\nimport StatePage from './components/StatePage';\nimport VaccinationPage from './components/VaccinationPage';\nimport AboutPage from './components/AboutPage';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport './style.css';\n\nfunction App() {\n  const covidData = useSelector(state => state.data[0]);\n  const deathData = useSelector(state => state.data[1]);\n  const stateData = useSelector(state => state.data[2]);\n  const vaccineData = useSelector(state => state.data[3]);\n\n  if (!covidData || !deathData || !stateData || !vaccineData) {\n    return (\n      <div>\n        <h2>Loading...</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Header />\n        <Tabs defaultActiveKey='dailyNational'>\n          <Tab eventKey='dailyNational' title='National'>\n            <FrontPageData covidData={covidData} deathData={deathData} />\n          </Tab>\n          <Tab eventKey='dailyState' title='State'>\n            <StatePage stateData={stateData} />\n          </Tab>\n          <Tab eventKey='dailyVaccine' title='Vaccine'>\n            <VaccinationPage vaccineData={vaccineData} />\n          </Tab>\n          <Tab eventKey='info' title='Info'>\n            <AboutPage />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const SHOW_DAILY_DATA = 'SHOW_DAILY_DATA';\nexport const ADD_FETCHED_DATA = 'ADD_FETCHED_DATA';\nexport const ADD_HISTORICAL_DATA = 'ADD_HISTORICAL_DATA';\nexport const ADD_STATE_DATA = 'ADD_STATE_DATA';\nexport const ADD_VACCINE_DATA = 'ADD_VACCINE_DATA';\n","import { combineReducers } from 'redux';\nimport dataReducer from './dataReducer';\n\nexport default combineReducers({\n  data: dataReducer,\n});\n","import {\n  ADD_FETCHED_DATA,\n  ADD_HISTORICAL_DATA,\n  ADD_STATE_DATA,\n  ADD_VACCINE_DATA,\n} from '../actions/types';\n\nexport default function dataReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_FETCHED_DATA:\n      return [...state, action.payload];\n    case ADD_HISTORICAL_DATA:\n      return [...state, action.payload];\n    case ADD_STATE_DATA:\n      return [...state, action.payload];\n    case ADD_VACCINE_DATA:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\n\nimport {\n  ADD_FETCHED_DATA,\n  ADD_HISTORICAL_DATA,\n  ADD_STATE_DATA,\n  ADD_VACCINE_DATA,\n} from './types';\n\nconst apiUrl =\n  'https://disease.sh/v3/covid-19/countries/usa?yesterday=false&twoDaysAgo=false&strict=true&allowNull=false';\n\nconst apiUrlTwo = 'https://disease.sh/v3/covid-19/historical/usa?lastdays=16';\n\nconst apiUrlThree = 'https://disease.sh/v3/covid-19/states';\n\nconst apiUrlFour =\n  'https://disease.sh/v3/covid-19/vaccine/coverage/countries/usa?lastdays=20&fullData=true';\n\nexport const fetchData = () => {\n  return async dispatch => {\n    return await axios\n      .get(apiUrl)\n      // .then(response => {\n      //   return response.data;\n      // })\n      .then(response => {\n        dispatch({\n          type: ADD_FETCHED_DATA,\n          payload: response.data,\n        });\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n\nexport const fetchDataTwo = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(apiUrlTwo);\n      dispatch({\n        type: ADD_HISTORICAL_DATA,\n        payload: response.data,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const fetchDataThree = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(apiUrlThree);\n      dispatch({\n        type: ADD_STATE_DATA,\n        payload: response.data,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const fetchDataFour = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(apiUrlFour);\n      dispatch({\n        type: ADD_VACCINE_DATA,\n        payload: response.data,\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\nimport {\n  fetchData,\n  fetchDataTwo,\n  fetchDataThree,\n  fetchDataFour,\n} from './actions';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\nasync function getData() {\n  store.dispatch(fetchData());\n  store.dispatch(fetchDataTwo());\n  store.dispatch(fetchDataThree());\n  store.dispatch(fetchDataFour());\n}\n\ngetData().then(\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n\n    document.getElementById('root')\n  )\n);\n"],"sourceRoot":""}