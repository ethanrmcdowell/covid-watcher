{"version":3,"sources":["components/Header/index.js","components/CurrentDate/index.js","components/DynamicChart/index.js","components/FrontPageData/index.js","components/SearchPage/index.js","components/AboutPage/index.js","App.js","actions/types.js","reducers/index.js","reducers/dataReducer.js","index.js","actions/index.js"],"names":["Header","Navbar","bg","variant","Brand","Nav","className","Link","href","CurrentDate","monthName","todayDate","Date","getDate","todayMonth","getMonth","todayYear","getFullYear","DynamicChart","useState","chartData","setChartData","deathsObj","useSelector","state","data","timeline","deaths","deathArray","Object","values","deathDates","keys","dailyDeathArray","i","dailyDeathCount","push","useEffect","labels","datasets","label","borderColor","backgroundColor","borderWidth","options","responsive","title","text","display","scales","y","grace","beginAtZero","FrontPageData","props","covidData","toString","replace","todayDeaths","active","SearchPage","AboutPage","App","exact","path","component","ADD_FETCHED_DATA","ADD_HISTORICAL_DATA","combineReducers","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","dispatch","axios","get","then","response","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc733e40.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nconst Header = () => {\n  return (\n    <Navbar bg='light' variant='light'>\n      <Navbar.Brand>COVID.WATCHER</Navbar.Brand>\n      <Nav className='mr-auto'>\n        <Nav.Link href='/covid-watcher'>Home</Nav.Link>\n        <Nav.Link href='/covid-watcher/search'>Search</Nav.Link>\n        <Nav.Link href='/covid-watcher/about'>About</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Header;\n\n// <Link to='/'>Home</Link>\n// <Link to='/search'>Search</Link>\n// <Link to='/about'>About</Link>\n","import React from 'react';\nimport './style.css';\n\nconst CurrentDate = () => {\n  let todayDate = new Date().getDate();\n  let todayMonth = new Date().getMonth();\n  let todayYear = new Date().getFullYear();\n  let monthName;\n\n  switch (todayMonth) {\n    case 0:\n      monthName = 'January';\n      break;\n    case 1:\n      monthName = 'February';\n      break;\n    case 2:\n      monthName = 'March';\n      break;\n    case 3:\n      monthName = 'April';\n      break;\n    case 4:\n      monthName = 'May';\n      break;\n    case 5:\n      monthName = 'June';\n      break;\n    case 6:\n      monthName = 'July';\n      break;\n    case 7:\n      monthName = 'July';\n      break;\n    case 8:\n      monthName = 'July';\n      break;\n    case 9:\n      monthName = 'July';\n      break;\n    case 10:\n      monthName = 'July';\n      break;\n    default:\n      monthName = 'July';\n      break;\n  }\n  return (\n    <div className='dateContainer'>\n      <h1 className='dateTitle'>\n        {monthName} {todayDate}, {todayYear}\n      </h1>\n    </div>\n  );\n};\n\nexport default CurrentDate;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport './style.css';\n\nconst DynamicChart = () => {\n  const [chartData, setChartData] = useState({});\n  const covidData = useSelector(state => state.data[1]);\n  // console.log(covidData);\n  const deathsObj = covidData.timeline.deaths;\n  const deathArray = Object.values(deathsObj);\n  const deathDates = Object.keys(deathsObj);\n  const dailyDeathArray = [];\n\n  for (let i = 1; i < 16; i++) {\n    let dailyDeathCount = deathArray[i] - deathArray[i - 1];\n    dailyDeathArray.push(dailyDeathCount);\n  }\n\n  const Chart = () => {\n    setChartData({\n      labels: deathDates,\n      datasets: [\n        {\n          label: 'Deaths',\n          data: dailyDeathArray,\n          borderColor: 'red',\n          backgroundColor: 'red',\n          borderWidth: 1.5,\n        },\n      ],\n    });\n  };\n  useEffect(() => {\n    Chart();\n  }, []);\n  return (\n    <div className='chartContainer'>\n      <h1>Bar Chart</h1>\n      <div>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: 'THICCNESS SCALE', display: true },\n            scales: {\n              y: {\n                grace: '0.5%',\n                beginAtZero: false,\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicChart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CurrentDate from '../CurrentDate';\nimport DynamicChart from '../DynamicChart';\nimport './style.css';\n\nconst FrontPageData = props => {\n  const covidData = useSelector(state => state.data[0]);\n  if (!covidData) {\n    return (\n      <div>\n        <h2>Loading...</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div className='dataContainer'>\n        <CurrentDate />\n        <h1 className='countryHeader'>United States:</h1>\n        <h2>\n          Total Deaths:{' '}\n          {covidData.deaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        </h2>\n        <h2>\n          Today Deaths:{' '}\n          {covidData.todayDeaths\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        </h2>\n        <h2>\n          Total Active Cases:{' '}\n          {covidData.active.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        </h2>\n        <div>\n          <DynamicChart />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default FrontPageData;\n","import React from 'react';\n\nconst SearchPage = props => {\n  return (\n    <div>\n      <h2>THIS IS THE SEARCH PAGE.</h2>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React from 'react';\n\nconst AboutPage = props => {\n  return (\n    <div>\n      <h2>THIS IS THE ABOUT PAGE.</h2>\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport FrontPageData from './components/FrontPageData';\nimport SearchPage from './components/SearchPage';\nimport AboutPage from './components/AboutPage';\nimport './style.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path='/covid-watcher' component={FrontPageData} />\n        <Route exact path='/covid-watcher/search' component={SearchPage} />\n        <Route exact path='/covid-watcher/about' component={AboutPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","export const SHOW_DAILY_DATA = 'SHOW_DAILY_DATA';\nexport const ADD_FETCHED_DATA = 'ADD_FETCHED_DATA';\nexport const ADD_HISTORICAL_DATA = 'ADD_HISTORICAL_DATA';\n","import { combineReducers } from 'redux';\nimport dataReducer from './dataReducer';\n\nexport default combineReducers({\n  data: dataReducer,\n});\n","import { ADD_FETCHED_DATA, ADD_HISTORICAL_DATA } from '../actions/types';\n\nexport default function dataReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_FETCHED_DATA:\n      return [...state, action.payload];\n    case ADD_HISTORICAL_DATA:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\nimport { fetchData, fetchDataTwo } from './actions';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\nstore.dispatch(fetchData());\nstore.dispatch(fetchDataTwo());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n","import axios from 'axios';\n\nimport { ADD_FETCHED_DATA, ADD_HISTORICAL_DATA } from './types';\n\nconst apiUrl =\n  'https://disease.sh/v3/covid-19/countries/usa?yesterday=false&twoDaysAgo=false&strict=true&allowNull=false';\n\nconst apiUrlTwo = 'https://disease.sh/v3/covid-19/historical/usa?lastdays=16';\n\nexport const fetchData = () => {\n  return dispatch => {\n    return (\n      axios\n        .get(apiUrl)\n        // .then(response => {\n        //   return response.data;\n        // })\n        .then(response => {\n          dispatch({\n            type: ADD_FETCHED_DATA,\n            payload: response.data,\n          });\n        })\n        .catch(error => {\n          throw error;\n        })\n    );\n  };\n};\n\nexport const fetchDataTwo = () => {\n  return dispatch => {\n    return axios\n      .get(apiUrlTwo)\n      .then(response => {\n        dispatch({\n          type: ADD_HISTORICAL_DATA,\n          payload: response.data,\n        });\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n"],"sourceRoot":""}